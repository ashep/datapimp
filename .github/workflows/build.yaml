name: build
on: push
jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: ashep/go-ci/actions/prepare@main
      - run: task lint:golangci

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: ashep/go-ci/actions/prepare@main
      - run: task test:unit

  func-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: ashep/go-ci/actions/prepare@main
      - run: task test:func

  build:
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - func-tests
    steps:
      - uses: ashep/go-ci/actions/prepare@main
      - run: task build

#  build:
#    name: Build
#    runs-on: ubuntu-latest
#    needs:
#      - test
#    steps:
#      - uses: ashep/go-ci-github/actions/prepare@main
#      - run: docker login -u ${{ vars.REGISTRY_USER }} -p ${{ secrets.REGISTRY_PASSWD }}
#      - run: docker build --build-arg ARCH=x86_64 --build-arg APP_NAME=${{ github.event.repository.name }} --build-arg APP_VERSION=${{ github.ref_name }} -t ${{ github.event.repository.name }} .
#      - if: github.ref_name != 'main'
#        run: |
#          docker tag ${{ github.event.repository.name }} ${{ vars.REGISTRY_USER }}/${{ github.event.repository.name }}:dev
#          docker push ${{ vars.REGISTRY_USER }}/${{ github.event.repository.name }}:dev
#      - if: github.ref_name == 'main'
#        run: |
#          docker tag ${{ github.event.repository.name }} ${{ vars.REGISTRY_USER }}/${{ github.event.repository.name }}:latest
#          docker push ${{ vars.REGISTRY_USER }}/${{ github.event.repository.name }}:latest
